buildscript {
	ext {
		springBootVersion = '1.4.2.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}


subprojects {
   
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: 'org.springframework.boot'
	apply plugin: "jacoco"
	apply plugin: "pmd"

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories {
		mavenCentral()
	}

	jacocoTestReport {
	    group = "Reporting"
	    reports {
	        xml.enabled true
	        csv.enabled false
	        html.destination "${buildDir}/reports/coverage"
	    }
	}
	
	pmd {
	  ignoreFailures = true
	  sourceSets = [sourceSets.main]
	  reportsDir = file("$project.buildDir/reports/pmd")
	 ruleSets = [
	            'java-android',
	            'java-basic',
	            'java-braces',
	            'java-clone',
	            'java-codesize',
	            'java-comments',
	            'java-controversial',
	            'java-coupling',
	            'java-design',
	            'java-empty',
	            'java-finalizers',
	            'java-imports',
	            'java-j2ee',
	            'java-javabeans',
	            'java-junit',
	            'java-logging-jakarta-commons',
	            'java-logging-java',
	            'java-migrating',
	            'java-naming',
	            'java-optimizations',
	            'java-strictexception',
	            'java-strings',
	            'java-sunsecure',
	            'java-typeresolution',
	            'java-unnecessary',
	            'java-unusedcode'
	            ]
	}

	dependencies {
		compile('org.springframework.boot:spring-boot-starter')
		compile('org.apache.commons:commons-lang3:3.5')
		compile ('commons-io:commons-io:2.5')
		
		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile("junit:junit")
		
	}
}
